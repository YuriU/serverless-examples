service: service-13-integration

plugins:
  - serverless-step-functions

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  iamRoleStatements:
    - Effect: Allow
      Action: states:SendTaskSuccess
      Resource: '*'

functions:
  sqs:
    handler: handler.sqs
    events:
      - sqs:
          arn:
            Fn::GetAtt: [MyQueue, Arn]
          batchSize: 1

  lambda:
    handler: handler.lambda

  sns:
    handler: handler.sns
    events:
      - sns:
          arn:
            Ref: MyTopic
          topicName: callback-topic

stepFunctions:
  validate: true
  stateMachines:
    callbackExample:
      definition:
        Comment: Demonstrate callbacks
        StartAt: Publish SQS message
        States:
          Publish SQS message:
            Type: Task
            Resource: arn:aws:states:::sqs:sendMessage.waitForTaskToken
            Parameters:
              QueueUrl:
                Ref: MyQueue
              MessageBody:
                StateMachineId.$: $$.StateMachine.Id
                ExecutionId.$: $$.Execution.Id
                StateName.$: $$.State.Name
                Token.$: $$.Task.Token
            Next: Invoke Lambda
          
          Invoke Lambda:
            Type: Task
            Resource: arn:aws:states:::lambda:invoke.waitForTaskToken
            Parameters:
              FunctionName:
                Ref: lambda
              Payload:
                StateMachineId.$: $$.StateMachine.Id
                ExecutionId.$: $$.Execution.Id
                StateName.$: $$.State.Name
                Token.$: $$.Task.Token
            Next: Publish SNS message

          Publish SNS message:
            Type: Task
            Resource: arn:aws:states:::sns:publish.waitForTaskToken
            Parameters:
              TopicArn:
                Ref: MyTopic
              Message:
                StateMachineId.$: $$.StateMachine.Id
                ExecutionId.$: $$.Execution.Id
                StateName.$: $$.State.Name
                Token.$: $$.Task.Token
            End: true

resources:
  Resources:
    MyQueue:
      Type: AWS::SQS::Queue
    
    MyTopic:
      Type: AWS::SNS::Topic